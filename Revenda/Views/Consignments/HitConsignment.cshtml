@model Revenda.Models.EditConsignmentView

@{
    ViewBag.Title = "HitConsignment";
}

@using (Html.BeginForm())
{
    <h2>Acerto Consignação</h2>
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ConsignmentId)
    @Html.HiddenFor(model => model.Status)
    <p>
        @Html.ActionLink("Finalizar", "UpdateConsignment", "Consignments", new { id = Model.ConsignmentId }, new { @class = "dialog-window btn btn-info btn-sm" })
        @Html.ActionLink("Voltar", "Index", new { }, new { @class = "btn btn-success btn-sm" })
        @Html.ActionLink("Imprimir Acerto ", "ReportForm", new { id = Model.ConsignmentId, source = "HitConsignments" }, new { @class = "btn btn-primary btn-sm " })
        @Html.ActionLink("Cancelar Acerto ", "CancelConsignment", new { id = Model.ConsignmentId }, new { @class = "btn btn-danger btn-sm " })
        @Html.ActionLink("Contas a Receber ", "CreateReceivables", new { id = Model.ConsignmentId }, new { @class = "btn btn-warning btn-sm " })
    </p>
    <td>    @Html.ValidationSummary(true, "", new { @class = "text-danger" }) </td>
    <table id="cabec" class="table table-striped table-bordered" style="width:100%">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Condition.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seller.FullName)
            </th>
            <th style="text-align:center">
                @Html.DisplayNameFor(model => model.Data)
            </th>
            <th style="text-align:center">
                @Html.DisplayNameFor(model => model.HitDate)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th>*@
            <th style="text-align:center">
                @Html.DisplayNameFor(model => model.TotalQuantity)
            </th>
            <th style="text-align:right">
                @Html.DisplayNameFor(model => model.TotalValue)
            </th>
            <th style="text-align:center">
                @Html.DisplayNameFor(model => model.TotalSaleQuantity)
            </th>
            <th style="text-align:right">
                @Html.DisplayNameFor(model => model.TotalSaleValue)
            </th>
            <th style="text-align:center">
                @Html.DisplayNameFor(model => model.TotalReturnQuantity)
            </th>
            <th style="text-align:right">
                @Html.DisplayNameFor(model => model.TotalReturnValue)
            </th>
        </tr>

        <tr>
            <td>
                @Html.DisplayFor(model => model.Condition.Description)
            </td>
            <td>
                @Html.DisplayFor(model => model.Seller.FullName)
            </td>
            <td align="center">
                @Html.DisplayFor(model => model.Data)
            </td>
            <td align="center">
                @Html.DisplayFor(model => model.HitDate)
            </td>
            @*<td>
                    @Html.DisplayFor(model => model.Remarks)
                </td>*@
            <td align="center">
                @Html.DisplayFor(model => model.TotalQuantity)
            </td>
            <td align="right">
                @Html.DisplayFor(model => model.TotalValue)
            </td>
            <td align="center">
                @Html.DisplayFor(model => model.TotalSaleQuantity)
            </td>
            <td align="right">
                @Html.DisplayFor(model => model.TotalSaleValue)
            </td>
            <td align="center">
                @Html.DisplayFor(model => model.TotalReturnQuantity)
            </td>
            <td align="right">
                @Html.DisplayFor(model => model.TotalReturnValue)
            </td>
        </tr>
    </table>
    if (Model.Details.Count == 0)
    {
        <h5>Nenhum item de consignação adicionado</h5>
    }
    else
    {
        <div id="tabdetalhes">
            <table id="detalhes" class="table table-bordered table-condensed table-striped table-hover table-responsive" style="width:100%">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.Details[0].Product.ProductCode)
                        </th>
                        @*<th>
                                @Html.DisplayNameFor(model => model.Details[0].Description)
                            </th>*@
                        <th style="text-align:right">
                            @Html.DisplayNameFor(model => model.Details[0].Price)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.Details[0].Quantity)
                        </th>
                        <th style="text-align:right">
                            @Html.DisplayNameFor(model => model.Details[0].Value)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.Details[0].SaleQuantity)
                        </th>
                        <th style="text-align:right">
                            @Html.DisplayNameFor(model => model.Details[0].SaleValue)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.Details[0].ReturnQuantity)
                        </th>
                        <th style="text-align:right">
                            @Html.DisplayNameFor(model => model.Details[0].ReturnValue)
                        </th>
                        <th>Ação</th>
                    </tr>
                </thead>
                <tbody id="detalhes1">
                    @foreach (var item in Model.Details)
                    {
                        <tr>
                            <td id="ConsignmentsDetailId">
                                @Html.DisplayFor(modelItem => item.ConsignmentsDetailId)
                            </td>
                            <td align="center">
                                @Html.DisplayFor(modelItem => item.Product.ProductCode)
                            </td>
                            @*<td>
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>*@
                            <td align="right">
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td align="center">
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td align="right">
                                @Html.DisplayFor(modelItem => item.Value)
                            </td>
                            <td align="center">
                                @Html.DisplayFor(modelItem => item.SaleQuantity)
                            </td>
                            <td align="right">
                                @Html.DisplayFor(modelItem => item.SaleValue)
                            </td>
                            <td id="returnqtde" align="center">
                                @Html.DisplayFor(modelItem => item.ReturnQuantity)
                            </td>
                            <td align="right">
                                @Html.DisplayFor(modelItem => item.ReturnValue)
                            </td>
                            <td>
                                @Html.ActionLink("Retornar", "AddReturn", "Consignments", new { id = item.ConsignmentsDetailId },
                                    new { @class = "dialog-window btn btn-primary btn-sm" })
                            </td>
                        </tr>
                    }
            </table>
        </div>
        if (TempData["Message"] != null)
        {
            <script src="~/Scripts/sweetalert.js"></script>
            <script type="text/javascript">
                window.onload = function() {
                alert("@(TempData["Message"] as string)");
        };
            </script>
        }
    }
}
<div class="modal fade" id="AddReturn" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel1" aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h2 class="modal-title">Retorno Consignação</h2>
            </div>
            <div class="modal-body">
                <div class="te">Aguarde por favor  ...</div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Mascaras")

    <script type="text/javascript">
        $(document).ready(function () {
            $('#detalhes').DataTable({
                dom: "<lf<t>ip>",
                "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todos"]],
                language: {
                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "_MENU_ resultados por página",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "Pesquisar",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "data": "consignmentsDetailId",
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                },
                select: {
                    style: 'single',
                }
            });


            $('#detalhes').on("click", ".btn", function (event) {
                event.preventDefault();
                var url = $(this).attr("href");
                $.get(url, function (data) {
                    $('#AddReturn .te').html(data);
                    $('#AddReturn').modal('show');
                });
            });

        });
    </script>
}
