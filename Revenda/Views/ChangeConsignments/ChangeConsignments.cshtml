@model Revenda.Models.ChangeConsignmentView

@{
    ViewBag.Title = "Consignação";
}

<h2>Consignação - Trocas</h2>


@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ConsignmentId)
        <div class="panel panel-default container-fluid">
        <br />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.SellerId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SellerId", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.SellerId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.WarehouseId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("WarehouseId", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.WarehouseId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConditionId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConditionId, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ConditionId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Gravar" class="btn-primary btn-sm" />
                        @*@Html.ActionLink("Gravar", "ChangeConsignments", "ChangeConsignments", new {}, new { @class = "btn btn-info btn-sm" })*@

                        @Html.ActionLink("Adicionar", "AddProductConsignment", "ChangeConsignments", new { id = Model.ConsignmentId }, new { @class = "dialog-window btn btn-info" })
                        @Html.ActionLink("Voltar", "Index", "Consignments", new { }, new { @class = "btn btn-success btn-sm" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    <table id="detalhes" class="table table-bordered table-condensed table-striped table-hover table-responsive" style="width:100%">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Details[0].Product.Image)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Details[0].Product.ProductCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Details[0].Description)
                </th>
                <th style="text-align:right">
                    @Html.DisplayNameFor(model => model.Details[0].Quantity)
                </th>
                <th style="text-align:right">
                    @Html.DisplayNameFor(model => model.Details[0].Value)
                </th>
                <th style="text-align:center">Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Details)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Product.Image))
                        {
                            <img src="@Url.Content(item.Product.Image)" alt="Image" style="width:50px;height:50px;max-width:100%;height:auto;" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.ProductCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td align="right">
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td align="right">
                        @Html.DisplayFor(modelItem => item.Value)
                    </td>
                    <td align="center">
                        @Html.ActionLink("Excluir", "ChangeProduct", "ChangeConsignments", new { id = item.ProductId, Pedido = Model.ConsignmentId },
                       new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Excluir ? Tem Certeza ?')" })
                    </td>
                </tr>
            }
        </tbody>
        <tr>
            <td colspan="3" align="right">
                <strong>Total</strong>
            </td>
            <td align="right">
                <strong> @Html.DisplayFor(modelItem => Model.TotalQuantity) </strong>
            </td>
            <td align="right">
                <strong> @Html.DisplayFor(modelItem => Model.TotalValue) </strong>
            </td>
            <td></td>
        </tr>
    </table>
}
<div class="modal fade" id="AddProductConsignment" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h2 class="modal-title"></h2>
            </div>
            <div class="modal-body"><div class="te">Please wait...</div></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Mascaras")
    <script type="text/javascript">

        $(document).ready(function () {

            $(function () {
                $("#datepicker").datepicker();
            });

            $("body").on("click", "a.dialog-window", null, function (e) {
                e.preventDefault();
                var $link = $(this);
                var title = $link.text();
                $('#AddProductConsignment .modal-title').html(title);
                var url = $(this).attr('href');
                if (url.indexOf('#') == 0) {
                    $('#AddProductConsignment').modal('show');
                }
                else {
                    $.get(url, function (data) {
                        $('#AddProductConsignment .te').html(data);
                        $('#AddProductConsignment').modal();
                    }).success(function () { $('input:text:visible:first').focus(); });

                }
            });

            var table = $('#detalhes').DataTable({
                dom: "<lf<t>ip>",
                "lengthMenu": [[5, 10, 50, -1], [5, 10, 50, "Todos"]],
                language: {
                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "_MENU_ resultados por página",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "Pesquisar",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                },
                //select: {
                //    style: 'single',
                //},
            });
        });

    </script>
}

